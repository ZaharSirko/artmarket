version: '3.8'

services:
  # PostgreSQL для painting-service
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: boomlog123321
      POSTGRES_DB: painting_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/pgsql/painting_init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - artmarket_network

  # Elasticsearch для пошуку картин
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - artmarket_network

  # Опціонально: Kibana для візуалізації Elasticsearch (якщо потрібно)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - artmarket_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - artmarket_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - artmarket_network

# Мережа для зв'язку між сервісами
networks:
  artmarket_network:
    driver: bridge

# Томи для збереження даних
volumes:
  postgres_data:
  elasticsearch_data:
  grafana_data: